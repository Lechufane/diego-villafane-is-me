/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: plaggy (https://sketchfab.com/plaggy)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/cc0-gear-bb92a0e2e5e04ed4a62a51dde6cb854a
title: CC0 - Gear
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { useLoader } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Gear_Gear_0: THREE.Mesh;
    GearRust_GearRust_0: THREE.Mesh;
  };
  materials: {
    Gear: THREE.MeshStandardMaterial & { color: string };
    GearRust: THREE.MeshStandardMaterial & { color: string };
  };
};

export default function Gears(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    "/animations/gears-transformed.glb"
  ) as unknown as GLTFResult;

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[-0.03, 0, 0]} rotation={[-1.92, 0, 0]} scale={0.07}>
            <mesh
              geometry={nodes.Gear_Gear_0.geometry}
              material={materials.Gear}
              material-color={"#C0C0C0"}
            />
          </group>
          <group
            position={[0.03, 0, -0.06]}
            rotation={[-1.92, 0.43, 0]}
            scale={0.07}
          >
            <mesh
              geometry={nodes.GearRust_GearRust_0.geometry}
              material={materials.Gear}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/gears-transformed.glb");
