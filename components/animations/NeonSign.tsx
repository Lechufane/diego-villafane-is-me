/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Alex Bes (https://sketchfab.com/alexbescg)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/game-ready-japanese-small-vertical-neon-sign-5849c107ecb7472bb1eef028f5b97f0d
title: Game Ready Japanese Small Vertical Neon Sign
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    sign_neon_small_vert_neon_sign_unique_0: THREE.Mesh;
    sign_neon_small_vert_neon_sign_tile_0: THREE.Mesh;
  };
  materials: {
    neon_sign_unique: THREE.MeshStandardMaterial;
    neon_sign_tile: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);

  const { nodes, materials } = useGLTF(
    "/animations/neonSign-transformed.glb"
  ) as GLTFResult;

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 90]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.sign_neon_small_vert_neon_sign_unique_0.geometry}
              material={materials.neon_sign_unique}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.sign_neon_small_vert_neon_sign_tile_0.geometry}
              material={materials.neon_sign_tile}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/neonSign-transformed.glb");
